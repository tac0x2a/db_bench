# embulk gem install embulk-input-jdbc

# EXECUTION (with classpathes)
# ./embulk run conf_dump_data_clickhouse.yml -C  ./lib/bsh-2.0b4.jar:./lib/guava-19.0.jar:./lib/jackson-annotations-2.7.0.jar:./lib/joda-time-2.9.9.jar:./lib/httpclient-4.5.2.jar:./lib/jackson-core-2.7.3.jar:./lib/lz4-1.3.0.jar:./lib/commons-codec-1.9.jar:./lib/httpcore-4.4.4.jar:./lib/jackson-databind-2.7.3.jar:./lib/slf4j-api-1.7.21.jar:./lib/commons-logging-1.2.jar:./lib/httpmime-4.5.2.jar:./lib/jcommander-1.27.jar:./lib/testng-6.8.21.jar

# in:
#   type: jdbc
#   driver_path: ./lib/clickhouse-jdbc-0.1-SNAPSHOT.jar
#   driver_class: ru.yandex.clickhouse.ClickHouseDriver
#   url: jdbc:clickhouse://127.0.0.1:8123/db_bench
#   query: SELECT * from bench

# Now, you can use clickhouse input on jdbc just install `embulk-input-clickhouse` plugin.
in:
  type: clickhouse
  database: db_bench
  # driver_path: ./lib/clickhouse-jdbc-exp-0.1.42.jar
  host: 127.0.0.1
  # connect_timeout: 300
  socket_timeout:  1000000
  query: SELECT * from db_bench.type_test
  column_options:
    ui64: {type: string}

# out:
#   type: jdbc
#   driver_path: ./lib/clickhouse-jdbc-0.1-SNAPSHOT.jar
#   driver_class: ru.yandex.clickhouse.ClickHouseDriver
#   url: jdbc:clickhouse://127.0.0.1:8123/db_bench
#   database: db_bench
#   table: load_embulk
#   mode: replace

# out:
#   type: postgresql
#   host: 127.0.0.1
#   port: 5432
#   user: postgres
#   password: 'password'
#   database: postgres
#   schema: db_bench
#   table: load_embulk
#   mode: replace

# out:
#   type: mysql
#   host: 127.0.0.1
#   port: 3307
#   user: root
#   password: 'password'
#   database: db_bench
#   table: load_embulk
#   mode: replace

# out:
#   type: file
#   path_prefix: ./output_csv/
#   file_ext: csv
#   formatter:
#     type: csv
#     charset: UTF-8
#     delimiter: ','
#     newline: CRLF
#     quote: '"'
#     escape: '\'
